// apply - set android plugin
apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        // define application pakage name - id in google store
        applicationId "org.osori.androidstudy"
        // support min sdk
        minSdkVersion 19
        // up up
        targetSdkVersion 26
        // app upgrade criteria
        versionCode 1
        // A string representing the version of the application distributed to the user.
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {

        }
        release {

        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled true
            shrinkResources true

            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'mips', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }

        density {
            enable true
            reset()
        }


    }

    lintOptions {
        abortOnError false
    }
    realm {
        syncEnabled = true;
    }

    productFlavors {
        arrogant {
            applicationId 'org.osori.androidstudy.arrogant'
        }
        friendly {
            applicationId 'org.osori.androidstudy.friendly'
        }
        obsequious {
            applicationId 'org.osori.androidstudy.obsequious'
        }
    }
}

ext {
    println 'app ext is called'
}

// add external library
dependencies {
    def SupportLibVer = '26.0.0'


    // define fileTree dependency and reference libs all jar files
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // if you want to import lib not in maven but local, use files or filetree grammer
    // compile files('libs/a.jar', 'libs/b.jar')
    // compile fileTree(dir: 'libs', include: '*.jar')

    // compile 'org.codehaus.groovy:groovy-all:2.4.4@jar'
    // is same as
    // compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4', ext: 'jar'

    // if you want to remove transitive dependency
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.2.0', transitive: false

    // exclude specific library in transitive dependency
    compile ('com.github.JunsuLime:Android-SectionAdapter:v0.2.0') {
        exclude group: 'junit'
        exclude group: 'com.android.support'
    }

    // compile ('group:name:version:ext')
    compile ('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.11.0@aar') {
        transitive = true
    }

    // download junit and reference it in testCompile process
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$SupportLibVer"
    compile "com.android.support:recyclerview-v7:$SupportLibVer"

    // week2
    compile "com.android.support:design:$SupportLibVer"

    // how to release my library
    compile 'com.github.JunsuLime:TestLibrary:v1.0.0'

    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'

    // view binding library butter knife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Image loading library glide
    compile 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
}

task printProperties() {
    println "build printProperties is called"
    doLast {
        println "printProperties.doLast is called"
        println "$login"
        println "$password"
    }
}

